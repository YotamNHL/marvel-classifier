{"version":3,"sources":["reportWebVitals.js","components/vertical_liniar_stepper.js","components/welcome_window.js","components/main_window.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","VerticalLinearStepper","React","useState","activeStep","setActiveStep","steps","username","Gender","HairColor","EyeColor","Race","Strength","Speed","Durability","Power","Combat","Intelligence","Height","Weight","goodOrEvil","isRequestSent","isResultReady","state","setState","superpowers","superpowers_to_emojy","classes","makeStyles","theme","root","width","button","marginTop","spacing","marginRight","backgroundColor","actionsContainer","marginBottom","color","resetContainer","padding","icon","bigAvatar","margin","height","useStyles","handleChangeInput","event","target","name","value","handleChangeCheckbox","checked","handleNext","prevActiveStep","handleBack","getStepContent","step","className","TextField","id","label","variant","placeholder","onChange","FormControl","fullWidth","Select","native","inputProps","defaultValue","InputLabel","htmlFor","labelId","MenuItem","Typography","gutterBottom","min","max","listCheckboxesBySuperpower","renderCheckbox","superpower","superpowerState","superpower_classname","type","i","checkboxesList","length","push","Stepper","orientation","map","index","Step","StepLabel","StepContent","Button","disabled","onClick","Paper","square","elevation","all_features_dict","all_features_string","JSON","stringify","replace","fetch","res","json","data","getHeroProba","subtitleStr","gif_url","resultStr","indicators","indicatorsStr","substring","delay","nrOfLevels","arcWidth","colors","percent","textColor","formatTextValue","src","Grid","Avatar","alt","href","returnResult","console","log","document","location","hostname","WelcomeWindow","MainWindow","props","pressed_start_handler","curr_state","is_pressed_start","class","this","onPress","autoPlay","controls","loop","Component","ReactDOM","render","StrictMode","transitionDuration","visable","getElementById"],"mappings":"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","file":"static/js/main.e4bb8ff3.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport './styles/vertical_liniar_stepper.css'\nimport './styles/typing.css'\nimport {RangeStepInput} from 'react-range-step-input';\nimport 'rc-checkbox/assets/index.css';\nimport GaugeChart from 'react-gauge-chart'\nimport FadeIn from 'react-fade-in';\nimport {F} from \"react-select/dist/index-4bd03571.esm\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\n\n\n\nexport default function VerticalLinearStepper() {\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = getSteps();\n    const [state, setState] = React.useState({\n        username: '',\n        Gender: 'Male',\n        HairColor: 'No Hair',\n        EyeColor: 'Black',\n        Race: 'Unknown Race',\n        Strength: 50,\n        Speed: 50,\n        Durability: 50,\n        Power: 50,\n        Combat: 50,\n        Intelligence: 50,\n        Height: 170,\n        Weight: 75,\n        'Super Strength': false,\n        'Stamina': false,\n        'Stealth': false,\n        'Enhanced Senses': false,\n        'Flight': false,\n        'Energy Blasts': false,\n        'Energy Absorption': false,\n        'Shapeshifting': false,\n        'Accelerated Healing': false,\n        'Force Fields': false,\n        'Psionic Powers': false,\n        'Weapon-based Powers': false,\n        'Energy Manipulation': false,\n        'Reflexes': false,\n        'Molecular Manipulation': false,\n        'Super Durability': false,\n        'Agility': false,\n        'Longevity': false,\n        'Super Speed': false,\n        goodOrEvil: false,\n        isRequestSent: false,\n        isResultReady: false\n    });\n\n    const superpowers = ['Super Strength',\n                           'Stamina',\n                           'Stealth',\n                           'Enhanced Senses',\n                           'Flight',\n                           'Energy Blasts',\n                           'Energy Absorption',\n                           'Shapeshifting',\n                           'Accelerated Healing',\n                           'Force Fields',\n                           'Psionic Powers',\n                           'Weapon-based Powers',\n                           'Energy Manipulation',\n                           'Reflexes',\n                           'Molecular Manipulation',\n                           'Super Durability',\n                           'Agility',\n                           'Longevity',\n                           'Super Speed'\n        ]\n    const superpowers_to_emojy = {\n                           'Super Strength': '💪',\n                           'Stamina': '🏃',\n                           'Stealth': '🤫',\n                           'Enhanced Senses': '🧐',\n                           'Flight': '✈️',\n                           'Energy Blasts': '⚡',\n                           'Energy Absorption': '🧽',\n                           'Shapeshifting': '🦎',\n                           'Accelerated Healing': '🩹',\n                           'Force Fields': '🛡️',\n                           'Psionic Powers': '🔮',\n                           'Weapon-based Powers': '🪓',\n                           'Energy Manipulation': '🪄',\n                           'Reflexes': '🐈',\n                           'Molecular Manipulation': '⚛️',\n                           'Super Durability': '✊',\n                           'Agility': '💨',\n                           'Longevity': '👴',\n                           'Super Speed': '🏁'\n    }\n    const useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%'\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        backgroundColor: '#a9334e',\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n        color: '#a9334e'\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n    },\n    icon: {\n        backgroundColor: '#a9334e',\n    },\n    bigAvatar: {\n        margin: 10,\n        width: 70,\n        height: 70,\n    }\n}));\n    const classes = useStyles();\n\n    const handleChangeInput = (event) => {\n        setState({...state, [event.target.name]: event.target.value});\n    };\n\n    const handleChangeCheckbox = (event) => {\n        setState({...state, [event.target.name]: event.target.checked});\n    };\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n        setState({...state,\n                        isRequestSent: false,\n                        isResultReady: false\n        })\n    };\n\n    function returnLoadingGif() {\n        console.log(document.location.hostname)\n        const gif_div = <div className=\"gif_div_style\">\n                            <img src=\"thinking_loading.gif\"/>\n                            <br/>\n                            <div className=\"icons_div\">\n                                Thinking...\n                            </div>\n                        </div>\n        return gif_div\n    }\n\n    function returnResult() {\n        let resultStr = \"You will become...\"\n        let subtitleStr;\n        let gif_url;\n        if(state.goodOrEvil['result']) {\n            gif_url = \"thanos_dance.gif\"\n            resultStr += \"A SUPERVILLAIN!\"\n            subtitleStr =  \"have fun causing havoc.\"\n        }\n        else{\n            gif_url = \"spiderman_loading.gif\"\n            resultStr += \"A SUPERHERO!\"\n            subtitleStr =  \"Enjoy being one of the good ones.\"\n        }\n        let indicators = state.goodOrEvil['indicators']\n        let indicatorsStr = \"The main indicators for my assesments are the following elements: \\n\"\n\n        for(let i=0; i < indicators.length; i++) {\n            indicatorsStr += indicators[i] + \", \"\n        }\n        indicatorsStr = indicatorsStr.substring(0, indicatorsStr.length - 2);\n        indicatorsStr += \".\"\n        const gif_div = <div className=\"result_div_style\">\n                            <FadeIn>\n                                {resultStr}\n                            </FadeIn>\n                            <br/>\n                            <br/>\n                            <FadeIn delay={1300}>\n                                <GaugeChart id=\"gauge-chart3\"\n                                  nrOfLevels={20}\n                                  arcWidth={0.3}\n                                     colors={[\"#ff0f22\", \"#1aff00\"]}\n                                  percent={state.goodOrEvil['certainty'] / 100}\n                                  textColor=\"black\"\n                                  formatTextValue={value => value+'% Certainty'}\n                                />\n                            </FadeIn>\n                            <br/>\n                            <br/>\n                            <FadeIn delay={1800}>\n                                {indicatorsStr}\n                            </FadeIn>\n                            <br/>\n                            <br/>\n                            <FadeIn delay={2500}>\n                                {subtitleStr}\n                            </FadeIn>\n                            <br/>\n                            <FadeIn delay={3000}>\n                                <div className=\"gif_div_style\">\n                                    <img src={gif_url} />\n                                </div>\n                            </FadeIn>\n                            <div className='icons_div'>\n                                <Grid className=\"icon_grid\">\n                                    <FadeIn delay={3500}>\n                                        <div className=\"icon_div\">\n                                            <Avatar alt=\"Yotam Levanon\" src=\"icon.jpeg\" className={classes.bigAvatar}/>\n                                        </div>\n                                    </FadeIn>\n                                    <FadeIn delay={3600}>\n                                        <div className=\"icon_div\">\n                                            <a href=\"https://github.com/YotamNHL/marvel-classifier\" target=\"_blank\">\n                                                <Avatar alt=\"github\" src=\"githubicon.png\" className={classes.bigAvatar}/>\n                                            </a>\n                                        </div>\n                                    </FadeIn>\n                                    <FadeIn delay={3700}>\n                                        <div className=\"icon_div\">\n                                            <a href=\"https://github.com/YotamNHL/marvel-classifier/blob/master/main.ipynb\" target=\"_blank\">\n                                                <Avatar alt=\"jupyter\" src=\"jupyter.png\" className={classes.bigAvatar}/>\n                                            </a>\n                                        </div>\n                                    </FadeIn>\n                                    <FadeIn delay={3800}>\n                                        <div className=\"icon_div\">\n                                            <a href=\"https://www.linkedin.com/in/yotam-levanon-8a4b58122/\" target=\"_blank\">\n                                                <Avatar alt=\"linkedin\" src=\"linkedinicon.png\" className={classes.bigAvatar}/>\n                                            </a>\n                                        </div>\n                                    </FadeIn>\n                                </Grid>\n                            </div>\n                            <br/>\n                            <br/>\n                            <br/>\n                            <br/>\n                        </div>\n\n        return gif_div\n    }\n\n    function getHeroProba() {\n        let all_features_dict = state\n        let all_features_string = JSON.stringify(all_features_dict).replace(/%22/g,\"\")\n        let url = \"https://marvel-ai.herokuapp.com/getGoodBadProbability?HeroData=\" + all_features_string;\n        return fetch(url)\n            .then((res) => {return res.json();})\n            .then(data => data['result']);\n    }\n\n    function putResultInState() {\n        setState({...state, isRequestSent: true})\n        getHeroProba()\n            .then((value) => setState({...state,\n                                                        isRequestSent: true,\n                                                        isResultReady:true,\n                                                        goodOrEvil: value}));\n    }\n\n    function getSteps() {\n        return ['Basic Info', 'Stats', 'Super Powers'];\n    }\n\n    function getStepContent(step) {\n        switch (step) {\n            case 0:\n                return getBasicInfo();\n            case 1:\n                return getStatsInfo();\n            case 2:\n                return getSuperPowers();\n            default:\n                return 'Unknown step';\n        }\n    }\n\n    function getBasicInfo() {\n    const basicInfoInputs =\n        <div className='basic_info_class'>\n            <TextField id=\"username\" name=\"username\" label=\"Super Name\" variant=\"filled\" placeholder='e.g. Spider-Megaboy' onChange={handleChangeInput}/>\n            <br/>\n            <br/>\n            <TextField id=\"Height\" name=\"Height\" label=\"Height\" variant=\"filled\" placeholder='in CM' onChange={handleChangeInput}/>\n            <br/>\n            <br/>\n            <TextField id=\"Weight\" name=\"Weight\" label=\"Weight\" variant=\"filled\" placeholder='in KG' onChange={handleChangeInput}/>\n            <br/>\n            <br/>\n            <FormControl className='Class2' fullWidth>\n                <Select\n                    native\n                    inputProps={{\n                        name: 'Gender',\n                        id: 'filled-gender-native-simple',\n                    }}\n                    name='Gender'\n                    defaultValue='Male'\n                    label='Gender'\n                    onChange={handleChangeInput}\n                >\n                    <option value='Male'>Male</option>\n                    <option value='Female'>Female</option>\n                </Select>\n            </FormControl>\n            <br/>\n            <br/>\n            <FormControl className='Class2' fullWidth>\n                <InputLabel htmlFor=\"filled-age-native-simple\">Hair Color</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    name=\"HairColor\"\n                    onChange={handleChangeInput}\n                    inputProps={{\n                        name: 'HairColor',\n                        id: 'age-native-simple',\n                    }}\n                >\n                    <MenuItem value='Black'>Black</MenuItem>\n                    <MenuItem value='Brown'>Brown</MenuItem>\n                    <MenuItem value='Red'>Red</MenuItem>\n                    <MenuItem value='Blond'>Blond</MenuItem>\n                    <MenuItem value='Green'>Green</MenuItem>\n                    <MenuItem value='White'>White</MenuItem>\n                    <MenuItem value='No Hair'>No Hair</MenuItem>\n                    <MenuItem value='Other'>Other</MenuItem>\n\n                </Select>\n            </FormControl>\n            <br/>\n            <br/>\n            <FormControl className='class3' fullWidth>\n                <InputLabel htmlFor=\"filled-age-native-simple\">Eye Color</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    name=\"EyeColor\"\n                    onChange={handleChangeInput}\n\n                    inputProps={{\n                        name: 'EyeColor',\n                        id: 'age-native-simple',\n                    }}\n                >\n                    <MenuItem value='black'>Black</MenuItem>\n                    <MenuItem value='brown'>Brown</MenuItem>\n                    <MenuItem value='yellow'>Yellow</MenuItem>\n                    <MenuItem value='red'>Red</MenuItem>\n                    <MenuItem value='blue'>Blue</MenuItem>\n                    <MenuItem value='green'>Green</MenuItem>\n                    <MenuItem value='white'>White</MenuItem>\n                    <MenuItem value='Other'>Other</MenuItem>\n                </Select>\n            </FormControl>\n            <br/>\n            <br/>\n            <FormControl className='class4' fullWidth>\n                <InputLabel htmlFor=\"filled-age-native-simple\">Race</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    name=\"Race\"\n                    onChange={handleChangeInput}\n                    inputProps={{\n                        name: 'Race',\n                        id: 'age-native-simple',\n                    }}\n                >\n                    <MenuItem value='Alien'>Alien</MenuItem>\n                    <MenuItem value='Asgardian'>Asgardian</MenuItem>\n                    <MenuItem value='Cyborg'>Cyborg</MenuItem>\n                    <MenuItem value='Demon'>Demon</MenuItem>\n                    <MenuItem value='God / Eternal'>God / Eternal</MenuItem>\n                    <MenuItem value='Human'>Human</MenuItem>\n                    <MenuItem value='Inhuman'>Inhuman</MenuItem>\n                    <MenuItem value='Mutant'>Mutant</MenuItem>\n                    <MenuItem value='Cosmic Entity'>Cosmic Entity</MenuItem>\n                    <MenuItem value='Radiation'>Radiation</MenuItem>\n                    <MenuItem value='Symbiote'>Symbiote</MenuItem>\n                    <MenuItem value='Other'>Other</MenuItem>\n                </Select>\n            </FormControl>\n\n        </div>\n    return basicInfoInputs\n}\n\n    function getStatsInfo() {\n        const statsInfoInputs =\n            <div className='sliders_class'>\n                <Typography gutterBottom>Strength</Typography>\n                <RangeStepInput name=\"Strength\" min={0} max={100} step={1}\n                                onChange={handleChangeInput}/> {state.Strength}\n                <Typography gutterBottom>Speed</Typography>\n                <RangeStepInput name=\"Speed\" min={0} max={100} step={1}\n                                onChange={handleChangeInput}/> {state.Speed}\n                <Typography gutterBottom>Durability</Typography>\n                <RangeStepInput name=\"Durability\" min={0} max={100} step={1}\n                                onChange={handleChangeInput}/> {state.Durability}\n                <Typography gutterBottom>Power</Typography>\n                <RangeStepInput name=\"Power\" min={0} max={100} step={1}\n                                onChange={handleChangeInput}/> {state.Power}\n                <Typography gutterBottom>Combat</Typography>\n                <RangeStepInput name=\"Combat\" min={0} max={100} step={1}\n                                onChange={handleChangeInput}/> {state.Combat}\n                <Typography gutterBottom>Intelligence</Typography>\n                <RangeStepInput name=\"Intelligence\" min={0} max={100} step={1}\n                                onChange={handleChangeInput}/> {state.Intelligence}\n            </div>\n        return statsInfoInputs\n    }\n\n    function renderCheckbox(superpower) {\n        const superpowerState = \"state.\" + superpower;\n        const superpower_classname = \"superpower_\" + superpower\n        const checkbox =\n                <div className={superpower_classname}>\n                        {superpowers_to_emojy[superpower]}\n                        <input\n                            name={superpower}\n                            value={superpowerState}\n                            type=\"checkbox\"\n                            onChange={handleChangeCheckbox}\n                        />\n                        {superpower}\n                </div>\n        return checkbox\n    }\n\n    function listCheckboxesBySuperpower() {\n        let i = 0;\n        let checkboxesList = []\n\n        for (i = 0; i < superpowers.length; i++) {\n            checkboxesList.push(renderCheckbox(superpowers[i]))\n        }\n        return checkboxesList\n    }\n\n    function getSuperPowers() {\n        const superPowers =\n                <div className=\"all_superpowers_div\">\n                    {listCheckboxesBySuperpower()}\n                </div>\n        return superPowers\n    }\n\n\n    return (\n        <div className='wrapper2'>\n            <div className={classes.root}>\n                <Stepper activeStep={activeStep} orientation=\"vertical\">\n                    {steps.map((label, index) => (\n                        <Step key={label}>\n                            <StepLabel>{label}</StepLabel>\n                            <StepContent>\n                                <Typography>{getStepContent(index)}</Typography>\n                                <div className={classes.actionsContainer}>\n                                    <div>\n                                        <Button\n                                            disabled={activeStep === 0}\n                                            onClick={handleBack}\n                                            className={classes.button}\n                                        >\n                                            Back\n                                        </Button>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={handleNext}\n                                            className={classes.button}\n                                        >\n                                            {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                        </Button>\n                                    </div>\n                                </div>\n                            </StepContent>\n                        </Step>\n                    ))}\n                </Stepper>\n                {activeStep === steps.length && (\n                    <Paper square elevation={0} className={classes.resetContainer}>\n                        {state.isRequestSent ? null : putResultInState()}\n                        {state.isResultReady ? returnResult() : returnLoadingGif()}\n                        <Button onClick={handleReset} className={classes.button}>\n                            Reset\n                        </Button>\n                    </Paper>\n                )}\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport { AwesomeButton } from \"react-awesome-button\";\nimport './styles/welcome_window.css';\n\nexport default function WelcomeWindow() {\n\n  return (\n      <div className='welcome_to_marvel_ai'>\n          <br/>\n          <div className=\"words\">\n              <span>W</span>\n              <span>E</span>\n              <span>L</span>\n              <span>C</span>\n              <span>O</span>\n              <span>M</span>\n              <span>E</span>\n          </div>\n\n          <div className=\"words\">\n              <span>T</span>\n              <span>O</span>\n          </div>\n\n          <div className=\"words\">\n              <span>M</span>\n              <span>A</span>\n              <span>R</span>\n              <span>V</span>\n              <span>E</span>\n              <span>L</span>\n              <span>.</span>\n              <span>A</span>\n              <span>I</span>\n          </div>\n          <br/>\n          <div className='subtitle'>\n              You create your own Alter-Ego\n              <br/>\n              And I will tell you if you are a HERO or a VILLAIN\n              <br/>\n              <div>\n              </div>\n              <br/>\n          </div>\n      </div>\n  );\n}","import React, {Component} from 'react'\nimport './styles/main_window.css'\nimport VerticalLinearStepper from './vertical_liniar_stepper'\nimport WelcomeWindow from \"./welcome_window\";\nimport {AwesomeButton} from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport ReactAudioPlayer from 'react-audio-player';\n\n/* The scoreboard component (which also consists of 2 'Team' component) one for every game session. */\nclass MainWindow extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_pressed_start: false\n        }\n    }\n\n    pressed_start_handler = () => {\n        let curr_state = this.state.is_pressed_start;\n        this.setState({is_pressed_start: !curr_state})\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"scoreboard\">\n                    <div class=\"spacer\">\n                        {this.state.is_pressed_start ? <VerticalLinearStepper/> : <WelcomeWindow/>}\n                    </div>\n                </div>\n                <div className='button_style'>\n                    {this.state.is_pressed_start ? '' :\n                        <AwesomeButton type=\"youtube\" onPress={this.pressed_start_handler}>Lets Go</AwesomeButton>}\n                </div>\n                <br/>\n                <br/>\n                <br/>\n                <div className=\"audio_player\">\n                    <ReactAudioPlayer\n                        src=\"avengers_theme_piano.mp3\"\n                        autoPlay={true}\n                        controls\n                        loop\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MainWindow;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './components/styles/index.css';\nimport FadeIn from 'react-fade-in';\nimport reportWebVitals from './reportWebVitals';\nimport MainWindow from './components/main_window'\n\nReactDOM.render(\n  <React.StrictMode>\n      <FadeIn transitionDuration={1000} visable={20}>\n        <MainWindow />\n      </FadeIn>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}